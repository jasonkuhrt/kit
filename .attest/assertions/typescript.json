{
    "src/utils/ts/test/$$.test.ts": [
        {
            "location": {
                "start": {
                    "line": 20,
                    "char": 3
                },
                "end": {
                    "line": 20,
                    "char": 46
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types are completely disjoint (no common values)\"; expected______: string; actual________: number; tip___________: \"These types have no overlap and will never be equal\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 31,
                    "char": 3
                },
                "end": {
                    "line": 31,
                    "char": 36
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types have overlapping values but are not structurally equal\"; expected______: A<{}>; actual________: B; diff_missing__: { query: {}; }; diff_excess___: { name: \"default\"; result: { a: string | null; }; }; tip___________: \"Types share some possible values but are different\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 47,
                    "char": 3
                },
                "end": {
                    "line": 47,
                    "char": 36
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types have overlapping values but are not structurally equal\"; expected______: A; actual________: B; diff_mismatch_: { a: { expected: Date; actual: number; }; }; tip___________: \"Types share some possible values but are different\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 67,
                    "char": 3
                },
                "end": {
                    "line": 67,
                    "char": 48
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types have overlapping values but are not structurally equal\"; expected______: Expected; actual________: Actual; diff_missing__: { age: number; }; diff_excess___: { email: string; }; diff_mismatch_: { id: { expected: string; actual: number; }; }; tip___________: \"Types share some possible values but are different\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 83,
                    "char": 3
                },
                "end": {
                    "line": 83,
                    "char": 48
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Actual type is a supertype of expected type but not structurally equal\"; expected______: Expected; actual________: Actual; diff_mismatch_: { x: { expected: 1; actual: 1 | undefined; }; }; tip___________: \"Actual is wider than expected - types don't match exactly\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 96,
                    "char": 3
                },
                "end": {
                    "line": 96,
                    "char": 13
                }
            },
            "args": [
                {
                    "type": "(actual: 42, error: \"Types are completely disjoint (no common values)\", expected: string) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 103,
                    "char": 3
                },
                "end": {
                    "line": 103,
                    "char": 14
                }
            },
            "args": [
                {
                    "type": "(actual: { a: number; b: number; }, error: \"Types have overlapping values but are not structurally equal\", expected: { a: string; }) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 129,
                    "char": 3
                },
                "end": {
                    "line": 129,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "(actual: 42, error: \"⚠ Types are not exactly equal\", expected: string) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 136,
                    "char": 3
                },
                "end": {
                    "line": 136,
                    "char": 20
                }
            },
            "args": [
                {
                    "type": "(actual: string) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 153,
                    "char": 3
                },
                "end": {
                    "line": 153,
                    "char": 25
                }
            },
            "args": [
                {
                    "type": "(actual: ComplexB, error: \"⚠ Types are not exactly equal\", expected: ComplexA) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 176,
                    "char": 3
                },
                "end": {
                    "line": 176,
                    "char": 25
                }
            },
            "args": [
                {
                    "type": "(actual: ComplexB, error: \"Types have overlapping values but are not structurally equal\", expected: ComplexA) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 204,
                    "char": 3
                },
                "end": {
                    "line": 204,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Custom validation failed\"; expected______: { a: string; }; actual________: { a: number; }; location______: \"src/file.ts:42\"; hint__________: \"Use string\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 220,
                    "char": 3
                },
                "end": {
                    "line": 220,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Type mismatch\"; expected______: string; actual________: number; tip___________: \"Use string\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 235,
                    "char": 3
                },
                "end": {
                    "line": 235,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Type mismatch\"; expected______: string; actual________: number; tip_a_________: \"Use string\"; tip_b_________: \"Check docs\"; tip_c_________: \"See example\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 299,
                    "char": 3
                },
                "end": {
                    "line": 299,
                    "char": 36
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types have overlapping values but are not structurally equal\"; expected______: A; actual________: B; diff_mismatch_: { a: { expected: { value: Date; }; actual: Date; }; }; tip___________: \"Types share some possible values but are different\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 313,
                    "char": 3
                },
                "end": {
                    "line": 313,
                    "char": 36
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types have overlapping values but are not structurally equal\"; expected______: A; actual________: B; diff_mismatch_: { a: { expected: { a: string; b: number; }; actual: { a: number; b: number; }; }; }; tip___________: \"Types share some possible values but are different\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 342,
                    "char": 3
                },
                "end": {
                    "line": 342,
                    "char": 45
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Actual type does not extend expected type\"; expected______: \"hello\"; actual________: string; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 365,
                    "char": 3
                },
                "end": {
                    "line": 365,
                    "char": 74
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Type has excess properties not present in expected type\"; expected______: Config; actual________: { id: true; extra: number; }; tip___________: \"Excess properties: ''extra''\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 389,
                    "char": 3
                },
                "end": {
                    "line": 389,
                    "char": 49
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Type extends the type it should not extend\"; expected______: string; actual________: \"hello\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 411,
                    "char": 3
                },
                "end": {
                    "line": 411,
                    "char": 46
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types are disjoint (no common values)\"; expected______: string; actual________: number; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 419,
                    "char": 3
                },
                "end": {
                    "line": 419,
                    "char": 47
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Actual extends Expected, but Expected does not extend Actual\"; expected______: string; actual________: \"hello\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 427,
                    "char": 3
                },
                "end": {
                    "line": 427,
                    "char": 47
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Expected extends Actual, but Actual does not extend Expected\"; expected______: \"hello\"; actual________: string; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 450,
                    "char": 3
                },
                "end": {
                    "line": 455,
                    "char": 4
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Actual extends Expected, but Expected does not extend Actual\"; expected______: Config; actual________: { id: boolean; name?: string; extra: number; }; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 481,
                    "char": 3
                },
                "end": {
                    "line": 481,
                    "char": 44
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Actual type is a supertype of expected type but not structurally equal\"; expected______: never; actual________: string; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 489,
                    "char": 3
                },
                "end": {
                    "line": 489,
                    "char": 43
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types are mutually assignable but not structurally equal\"; expected______: any; actual________: unknown; tip___________: \"Use equiv() for mutual assignability OR apply Simplify<T> to normalize types\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 498,
                    "char": 3
                },
                "end": {
                    "line": 498,
                    "char": 46
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Actual type is a subtype of expected type but not structurally equal\"; expected______: unknown; actual________: string; tip___________: \"Actual is narrower than expected - types don't match exactly\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 507,
                    "char": 3
                },
                "end": {
                    "line": 507,
                    "char": 43
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types are mutually assignable but not structurally equal\"; expected______: unknown; actual________: any; tip___________: \"Use equiv() for mutual assignability OR apply Simplify<T> to normalize types\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 516,
                    "char": 3
                },
                "end": {
                    "line": 516,
                    "char": 51
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Types are completely disjoint (no common values)\"; expected______: true; actual________: false; tip___________: \"These types have no overlap and will never be equal\"; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        }
    ]
}
