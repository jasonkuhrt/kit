{
    "src/utils/ts/err.test.ts": [
        {
            "location": {
                "start": {
                    "line": 6,
                    "char": 3
                },
                "end": {
                    "line": 6,
                    "char": 39
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"msg\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 13,
                    "char": 3
                },
                "end": {
                    "line": 13,
                    "char": 59
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"msg\"; a_____________: \"a\"; b_____________: \"b\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 22,
                    "char": 3
                },
                "end": {
                    "line": 22,
                    "char": 75
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"msg\"; a_____________: \"a\"; b_____________: \"b\"; c_____________: \"c\"; d_____________: \"d\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 34,
                    "char": 3
                },
                "end": {
                    "line": 34,
                    "char": 73
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"msg\"; veryLongKeyName: \"x\"; s_____________: \"y\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        }
    ],
    "src/utils/ts/assert/$$.test.ts": [
        {
            "location": {
                "start": {
                    "line": 32,
                    "char": 3
                },
                "end": {
                    "line": 32,
                    "char": 48
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED and ACTUAL are disjoint\"; expected______: string; actual________: number; tip___________: \"Types share no values\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 44,
                    "char": 3
                },
                "end": {
                    "line": 44,
                    "char": 38
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: A<{}>; actual________: B; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 56,
                    "char": 3
                },
                "end": {
                    "line": 56,
                    "char": 38
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: A; actual________: B; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 68,
                    "char": 3
                },
                "end": {
                    "line": 68,
                    "char": 38
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: E; actual________: A; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 80,
                    "char": 3
                },
                "end": {
                    "line": 80,
                    "char": 38
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"ACTUAL is supertype of EXPECTED\"; expected______: E; actual________: A; tip___________: \"ACTUAL is wider than EXPECTED\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 92,
                    "char": 3
                },
                "end": {
                    "line": 92,
                    "char": 12
                }
            },
            "args": [
                {
                    "type": "[{ ERROR_________: \"EXPECTED and ACTUAL are disjoint\"; expected______: string; actual________: 42; tip___________: \"Types share no values\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }]",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 104,
                    "char": 3
                },
                "end": {
                    "line": 104,
                    "char": 13
                }
            },
            "args": [
                {
                    "type": "[{ ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: { a: string; }; actual________: { a: number; b: number; }; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }]",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 126,
                    "char": 3
                },
                "end": {
                    "line": 126,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "(actual: 42, error: \"âš  Types are not exactly equal\", expected: string) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 133,
                    "char": 3
                },
                "end": {
                    "line": 133,
                    "char": 20
                }
            },
            "args": [
                {
                    "type": "(actual: string) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 137,
                    "char": 3
                },
                "end": {
                    "line": 137,
                    "char": 25
                }
            },
            "args": [
                {
                    "type": "(actual: CB, error: \"âš  Types are not exactly equal\", expected: CA) => void",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 148,
                    "char": 3
                },
                "end": {
                    "line": 148,
                    "char": 13
                }
            },
            "args": [
                {
                    "type": "[actual: { ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: { id: string; user: { name: string; age: number; }; tags: string[]; }; actual________: { id: string; user: { name: string; age: string; }; tags: string[]; extra: boolean; }; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }]",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 177,
                    "char": 3
                },
                "end": {
                    "line": 177,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Custom validation failed\"; expected______: { a: string; }; actual________: { a: number; }; location______: \"src/file.ts:42\"; hint__________: \"Use string\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 189,
                    "char": 3
                },
                "end": {
                    "line": 189,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Type mismatch\"; expected______: string; actual________: number; tip___________: \"Use string\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 205,
                    "char": 3
                },
                "end": {
                    "line": 205,
                    "char": 18
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Type mismatch\"; expected______: string; actual________: number; tip_a_________: \"Use string\"; tip_b_________: \"Check docs\"; tip_c_________: \"See example\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 221,
                    "char": 3
                },
                "end": {
                    "line": 221,
                    "char": 38
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: A; actual________: B; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 233,
                    "char": 3
                },
                "end": {
                    "line": 233,
                    "char": 38
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: A; actual________: B; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 245,
                    "char": 3
                },
                "end": {
                    "line": 245,
                    "char": 47
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"ACTUAL does not extend EXPECTED\"; expected______: \"hello\"; actual________: string; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 268,
                    "char": 3
                },
                "end": {
                    "line": 268,
                    "char": 48
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"ACTUAL extends EXPECTED but should not\"; expected______: string; actual________: \"hello\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 279,
                    "char": 3
                },
                "end": {
                    "line": 279,
                    "char": 48
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED and ACTUAL are disjoint\"; expected______: string; actual________: number; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 285,
                    "char": 3
                },
                "end": {
                    "line": 285,
                    "char": 49
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"ACTUAL extends EXPECTED but not vice versa\"; expected______: string; actual________: \"hello\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 291,
                    "char": 3
                },
                "end": {
                    "line": 291,
                    "char": 49
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED extends ACTUAL but not vice versa\"; expected______: \"hello\"; actual________: string; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 320,
                    "char": 3
                },
                "end": {
                    "line": 320,
                    "char": 65
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED only overlaps with ACTUAL\"; expected______: [string, string]; actual________: [a: number, b: number]; tip___________: \"Types share some values but differ\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 331,
                    "char": 3
                },
                "end": {
                    "line": 331,
                    "char": 65
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED and ACTUAL are disjoint\"; expected______: string; actual________: number; tip___________: \"Types share no values\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 342,
                    "char": 3
                },
                "end": {
                    "line": 342,
                    "char": 53
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"EXPECTED and ACTUAL are disjoint\"; expected______: number; actual________: string; tip___________: \"Types share no values\"; HIERARCHY_____: readonly [\"root\", \"assert\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 355,
                    "char": 3
                },
                "end": {
                    "line": 355,
                    "char": 27
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract array from incompatible type\"; expected______: \"Type must extend array (readonly any[])\"; actual________: string; attempted_____: \"array extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 366,
                    "char": 3
                },
                "end": {
                    "line": 366,
                    "char": 27
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract awaited from incompatible type\"; expected______: \"Type must extend PromiseLike<any>\"; actual________: string; attempted_____: \"awaited extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 377,
                    "char": 3
                },
                "end": {
                    "line": 377,
                    "char": 27
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract parameters from incompatible type\"; expected______: \"Type must extend function ((...args: any) => any)\"; actual________: string; attempted_____: \"parameters extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 388,
                    "char": 3
                },
                "end": {
                    "line": 388,
                    "char": 27
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract returned from incompatible type\"; expected______: \"Type must extend function ((...args: any) => any)\"; actual________: string; attempted_____: \"returned extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 406,
                    "char": 3
                },
                "end": {
                    "line": 406,
                    "char": 23
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract awaited from incompatible type\"; expected______: \"Type must extend PromiseLike<any>\"; actual________: string; attempted_____: \"awaited extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 422,
                    "char": 3
                },
                "end": {
                    "line": 422,
                    "char": 23
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract array from incompatible type\"; expected______: \"Type must extend array (readonly any[])\"; actual________: string; attempted_____: \"array extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 440,
                    "char": 3
                },
                "end": {
                    "line": 440,
                    "char": 23
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract awaited from incompatible type\"; expected______: \"Type must extend PromiseLike<any>\"; actual________: \"hello\"; attempted_____: \"awaited extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 456,
                    "char": 3
                },
                "end": {
                    "line": 456,
                    "char": 23
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract array from incompatible type\"; expected______: \"Type must extend array (readonly any[])\"; actual________: \"hello\"; attempted_____: \"array extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        },
        {
            "location": {
                "start": {
                    "line": 472,
                    "char": 3
                },
                "end": {
                    "line": 472,
                    "char": 23
                }
            },
            "args": [
                {
                    "type": "{ ERROR_________: \"Cannot extract returned from incompatible type\"; expected______: \"Type must extend function ((...args: any) => any)\"; actual________: \"hello\"; attempted_____: \"returned extractor\"; HIERARCHY_____: readonly [\"root\", ...string[]]; }",
                    "relationships": {
                        "args": [
                            "equality"
                        ],
                        "typeArgs": []
                    }
                }
            ],
            "typeArgs": [],
            "errors": [],
            "completions": {}
        }
    ]
}
