{
  "src/utils/ts/test/error-messages.test.ts": [
    {
      "location": {
        "start": {
          "line": 20,
          "char": 3
        },
        "end": {
          "line": 20,
          "char": 46
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"⚠ Types are not exactly equal\"; expected____: string; actual______: number; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 30,
          "char": 3
        },
        "end": {
          "line": 30,
          "char": 36
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"⚠ Types are not exactly equal\"; expected____: A<{}>; actual______: B; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 40,
          "char": 3
        },
        "end": {
          "line": 40,
          "char": 36
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"⚠ Types are not exactly equal\"; expected____: A; actual______: B; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 69,
          "char": 3
        },
        "end": {
          "line": 69,
          "char": 18
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Custom validation failed\"; expected____: { a: string; }; actual______: { a: number; }; location____: \"src/file.ts:42\"; hint________: \"Use string\"; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 85,
          "char": 3
        },
        "end": {
          "line": 85,
          "char": 18
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type mismatch\"; expected____: string; actual______: number; tip_________: \"Use string\"; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 100,
          "char": 3
        },
        "end": {
          "line": 100,
          "char": 18
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type mismatch\"; expected____: string; actual______: number; tip_a_______: \"Use string\"; tip_b_______: \"Check docs\"; tip_c_______: \"See example\"; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 169,
          "char": 3
        },
        "end": {
          "line": 169,
          "char": 36
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"⚠ Types are not exactly equal\"; expected____: A; actual______: B; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 179,
          "char": 3
        },
        "end": {
          "line": 179,
          "char": 36
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"⚠ Types are not exactly equal\"; expected____: A; actual______: B; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 201,
          "char": 3
        },
        "end": {
          "line": 201,
          "char": 45
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Actual type does not extend expected type\"; expected____: \"hello\"; actual______: string; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 224,
          "char": 3
        },
        "end": {
          "line": 224,
          "char": 73
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type has excess properties not present in expected type\"; expected____: Config; actual______: { id: true; extra: number; }; tip_________: \"Excess properties: ''extra''\"; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 247,
          "char": 3
        },
        "end": {
          "line": 247,
          "char": 48
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Actual type extends type it should not extend\"; expected____: string; actual______: \"hello\"; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 269,
          "char": 3
        },
        "end": {
          "line": 269,
          "char": 46
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Types are disjoint (no common values)\"; expected____: string; actual______: number; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 277,
          "char": 3
        },
        "end": {
          "line": 277,
          "char": 47
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Actual extends Expected, but Expected does not extend Actual\"; expected____: string; actual______: \"hello\"; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 285,
          "char": 3
        },
        "end": {
          "line": 285,
          "char": 47
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Expected extends Actual, but Actual does not extend Expected\"; expected____: \"hello\"; actual______: string; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 308,
          "char": 3
        },
        "end": {
          "line": 308,
          "char": 93
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Actual extends Expected, but Expected does not extend Actual\"; expected____: Config; actual______: { id: boolean; name?: string; extra: number; }; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 334,
          "char": 3
        },
        "end": {
          "line": 334,
          "char": 43
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type is not never\"; expected____: never; actual______: string; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 342,
          "char": 3
        },
        "end": {
          "line": 342,
          "char": 42
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type is not any\"; expected____: any; actual______: unknown; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 350,
          "char": 3
        },
        "end": {
          "line": 350,
          "char": 45
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type is not unknown\"; expected____: unknown; actual______: string; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 358,
          "char": 3
        },
        "end": {
          "line": 358,
          "char": 42
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type is any, not unknown\"; expected____: unknown; actual______: any; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    },
    {
      "location": {
        "start": {
          "line": 366,
          "char": 3
        },
        "end": {
          "line": 366,
          "char": 56
        }
      },
      "args": [
        {
          "type": "{ ERROR_______: \"Type is not an empty object (has keys)\"; expected____: Empty; actual______: object & { a: number; }; }",
          "relationships": {
            "args": [
              "equality"
            ],
            "typeArgs": []
          }
        }
      ],
      "typeArgs": [],
      "errors": [],
      "completions": {}
    }
  ]
}
